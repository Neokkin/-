--// SERVICES
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

--// CONFIG
local fileNameSingular = "esp_singular.txt"
local fileNameMulti = "esp_multi.txt"
local loadoutsFolder = "esp_loadouts"

--// SETTINGS
local showName, showDistance, showOutline = true, true, true

--// CLEANUP
if CoreGui:FindFirstChild("ESP_GUI") then CoreGui.ESP_GUI:Destroy() end

--// GUI SETUP
local screenGui = Instance.new("ScreenGui", CoreGui)
screenGui.Name = "ESP_GUI"
screenGui.ResetOnSpawn = false

local function makeDraggable(frame)
	local dragging, offset
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			offset = Vector2.new(input.Position.X - frame.Position.X.Offset, input.Position.Y - frame.Position.Y.Offset)
		end
	end)
	frame.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			frame.Position = UDim2.new(0, input.Position.X - offset.X, 0, input.Position.Y - offset.Y)
		end
	end)
end

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 340, 0, 330)
mainFrame.Position = UDim2.new(0.5, -170, 0.4, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", mainFrame)
makeDraggable(mainFrame)

-- Input Boxes
local function createTextBox(parent, posY, placeholder)
	local box = Instance.new("TextBox", parent)
	box.Size = UDim2.new(1, -20, 0, 30)
	box.Position = UDim2.new(0, 10, 0, posY)
	box.PlaceholderText = placeholder
	box.Text = ""
	box.ClearTextOnFocus = false
	box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	box.TextColor3 = Color3.fromRGB(255, 255, 255)
	Instance.new("UICorner", box)
	return box
end
local singularBox = createTextBox(mainFrame, 10, "Singular Esp (Exact names)")
local multiBox = createTextBox(mainFrame, 50, "Multi Esp (Folders/Models with parts)")

-- Buttons
local function createButton(text, parent, pos, size, color)
	local btn = Instance.new("TextButton", parent)
	btn.Text = text
	btn.Size = size
	btn.Position = pos
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Font = Enum.Font.SourceSansBold
	btn.TextSize = 16
	Instance.new("UICorner", btn)
	return btn
end

local executeBtn = createButton("ESP: Off", mainFrame, UDim2.new(0, 10, 0, 90), UDim2.new(0.5, -15, 0, 30), Color3.fromRGB(170, 0, 0))
local closeBtn = createButton("Close", mainFrame, UDim2.new(0.5, 5, 0, 90), UDim2.new(0.5, -15, 0, 30), Color3.fromRGB(170, 0, 0))

local nameBtn = createButton("Name: On", mainFrame, UDim2.new(0, 10, 0, 130), UDim2.new(1/3, -15, 0, 30), Color3.fromRGB(0, 170, 0))
local distBtn = createButton("Distance: On", mainFrame, UDim2.new(1/3, 5, 0, 130), UDim2.new(1/3, -10, 0, 30), Color3.fromRGB(0, 170, 0))
local outlineBtn = createButton("Outline: On", mainFrame, UDim2.new(2/3, 5, 0, 130), UDim2.new(1/3, -15, 0, 30), Color3.fromRGB(0, 170, 0))

-- Toggle Button (for reopening GUI)
local toggleBtn = createButton("ΕΥΞφ", screenGui, UDim2.new(0, 30, 1, -40), UDim2.new(0, 50, 0, 25), Color3.fromRGB(80, 80, 80))
toggleBtn.Visible = false
makeDraggable(toggleBtn)

-- Dropdown for Loadouts
local loadoutDropdown = Instance.new("TextButton", mainFrame)
loadoutDropdown.Position = UDim2.new(0, 10, 0, 170)
loadoutDropdown.Size = UDim2.new(1, -20, 0, 30)
loadoutDropdown.Text = "Select Loadout"
loadoutDropdown.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
loadoutDropdown.TextColor3 = Color3.new(1, 1, 1)
Instance.new("UICorner", loadoutDropdown)

local loadoutNameBox = createTextBox(mainFrame, 210, "New Loadout Name")
local createBtn = createButton("Create", mainFrame, UDim2.new(0, 10, 0, 250), UDim2.new(1/3, -15, 0, 30), Color3.fromRGB(0, 120, 255))
local loadBtn = createButton("Load", mainFrame, UDim2.new(1/3, 5, 0, 250), UDim2.new(1/3, -10, 0, 30), Color3.fromRGB(0, 200, 0))
local deleteBtn = createButton("Delete", mainFrame, UDim2.new(2/3, 5, 0, 250), UDim2.new(1/3, -15, 0, 30), Color3.fromRGB(200, 0, 0))

-- Dropdown Logic
local dropdownOpen = false
local dropdownFrame = Instance.new("Frame", mainFrame)
dropdownFrame.Position = UDim2.new(0, 10, 0, 200)
dropdownFrame.Size = UDim2.new(1, -20, 0, 80)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownFrame.Visible = false
Instance.new("UICorner", dropdownFrame)

local function refreshDropdown()
	for _, child in ipairs(dropdownFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	if isfolder and isfile and listfiles and isfolder(loadoutsFolder) then
		local files = listfiles(loadoutsFolder)
		for _, file in ipairs(files) do
			local name = file:match("([^/\\]+)%.txt$")
			local btn = Instance.new("TextButton", dropdownFrame)
			btn.Size = UDim2.new(1, -4, 0, 25)
			btn.Position = UDim2.new(0, 2, 0, (#dropdownFrame:GetChildren()-1) * 25)
			btn.Text = name
			btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
			btn.TextColor3 = Color3.new(1, 1, 1)
			btn.MouseButton1Click:Connect(function()
				loadoutDropdown.Text = name
				dropdownOpen = false
				dropdownFrame.Visible = false
			end)
		end
	end
end

loadoutDropdown.MouseButton1Click:Connect(function()
	dropdownOpen = not dropdownOpen
	dropdownFrame.Visible = dropdownOpen
	if dropdownOpen then refreshDropdown() end
end)

-- File Helpers
local function saveToFile(path, data)
	if writefile then writefile(path, data) end
end
local function loadFromFile(path)
	if readfile and isfile and isfile(path) then return readfile(path) end
	return ""
end

-- Loadout Actions
if makefolder and not isfolder(loadoutsFolder) then makefolder(loadoutsFolder) end

createBtn.MouseButton1Click:Connect(function()
	local name = loadoutNameBox.Text
	if name ~= "" then
		saveToFile(loadoutsFolder.."/"..name..".txt", singularBox.Text.."|"..multiBox.Text)
		refreshDropdown()
	end
end)
loadBtn.MouseButton1Click:Connect(function()
	local name = loadoutDropdown.Text
	if name ~= "" and isfile(loadoutsFolder.."/"..name..".txt") then
		local content = loadFromFile(loadoutsFolder.."/"..name..".txt")
		local s, m = content:match("^(.*)|(.*)$")
		if s then singularBox.Text = s end
		if m then multiBox.Text = m end
	end
end)
deleteBtn.MouseButton1Click:Connect(function()
	local name = loadoutDropdown.Text
	if name ~= "" then
		local path = loadoutsFolder.."/"..name..".txt"
		if delfile and isfile(path) then delfile(path) end
		refreshDropdown()
	end
end)

-- ESP Logic
local espObjects = {}
local function clearESP()
	for _, esp in pairs(espObjects) do
		if esp.Highlight then esp.Highlight:Destroy() end
		if esp.Billboard then esp.Billboard:Destroy() end
		if esp.Connection then esp.Connection:Disconnect() end
	end
	espObjects = {}
end

local function createESP(target)
	local part = target:IsA("Model") and target:FindFirstChildWhichIsA("BasePart") or target
	if not part then return end

	local highlight = showOutline and Instance.new("Highlight") or nil
	if highlight then
		highlight.Adornee = part
		highlight.FillTransparency = 1
		highlight.OutlineTransparency = 0
		highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
		highlight.Parent = part
	end

	local billboard = Instance.new("BillboardGui")
	billboard.Adornee = part
	billboard.Size = UDim2.new(0, 200, 0, 40)
	billboard.StudsOffset = Vector3.new(0, 3, 0)
	billboard.AlwaysOnTop = true
	billboard.MaxDistance = 1000
	billboard.Parent = part

	local nameLabel = Instance.new("TextLabel", billboard)
	nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Text = showName and target.Name or ""
	nameLabel.TextColor3 = Color3.new(1, 1, 1)
	nameLabel.TextScaled = true
	nameLabel.Font = Enum.Font.SourceSansBold
	nameLabel.TextStrokeTransparency = 0.5

	local distLabel = Instance.new("TextLabel", billboard)
	distLabel.Size = UDim2.new(1, 0, 0.5, 0)
	distLabel.Position = UDim2.new(0, 0, 0.5, 0)
	distLabel.BackgroundTransparency = 1
	distLabel.Text = ""
	distLabel.TextColor3 = Color3.new(0.8, 0.8, 0.8)
	distLabel.TextScaled = true
	distLabel.Font = Enum.Font.SourceSans
	distLabel.TextStrokeTransparency = 0.5

	local conn = RunService.RenderStepped:Connect(function()
		if not part or not part:IsDescendantOf(workspace) then
			conn:Disconnect()
			return
		end
		local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
		if root and showDistance then
			distLabel.Text = string.format("%.0f studs", (part.Position - root.Position).Magnitude)
		else
			distLabel.Text = ""
		end
		nameLabel.Text = showName and target.Name or ""
	end)

	table.insert(espObjects, {Highlight = highlight, Billboard = billboard, Connection = conn})
end

local function executeESP()
	clearESP()
	for _, name in ipairs(string.split(singularBox.Text, ",")) do
		name = name:match("^%s*(.-)%s*$")
		for _, model in ipairs(workspace:GetDescendants()) do
			if model:IsA("Model") and model.Name == name then
				createESP(model)
			end
		end
	end
	for _, name in ipairs(string.split(multiBox.Text, ",")) do
		name = name:match("^%s*(.-)%s*$")
		for _, v in ipairs(workspace:GetDescendants()) do
			if v.Name == name and (v:IsA("Model") or v:IsA("Folder")) then
				for _, child in ipairs(v:GetChildren()) do
					if child:IsA("BasePart") or child:IsA("Model") then
						createESP(child)
					end
				end
			end
		end
	end
	saveToFile(fileNameSingular, singularBox.Text)
	saveToFile(fileNameMulti, multiBox.Text)
end

-- Toggles and UI logic
executeBtn.MouseButton1Click:Connect(function()
	if executeBtn.Text == "ESP: Off" then
		executeBtn.Text = "ESP: On"
		executeBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
		executeESP()
	else
		executeBtn.Text = "ESP: Off"
		executeBtn.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
		clearESP()
	end
end)
closeBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
	toggleBtn.Visible = true
end)
toggleBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = true
	toggleBtn.Visible = false
end)
nameBtn.MouseButton1Click:Connect(function()
	showName = not showName
	nameBtn.Text = "Name: " .. (showName and "On" or "Off")
	nameBtn.BackgroundColor3 = showName and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
	if executeBtn.Text == "ESP: On" then executeESP() end
end)
distBtn.MouseButton1Click:Connect(function()
	showDistance = not showDistance
	distBtn.Text = "Distance: " .. (showDistance and "On" or "Off")
	distBtn.BackgroundColor3 = showDistance and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
	if executeBtn.Text == "ESP: On" then executeESP() end
end)
outlineBtn.MouseButton1Click:Connect(function()
	showOutline = not showOutline
	outlineBtn.Text = "Outline: " .. (showOutline and "On" or "Off")
	outlineBtn.BackgroundColor3 = showOutline and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
	if executeBtn.Text == "ESP: On" then executeESP() end
end)

-- Auto refresh
spawn(function()
	while true do
		if executeBtn.Text == "ESP: On" then executeESP() end
		task.wait(3)
	end
end)

-- Load saved inputs
singularBox.Text = loadFromFile(fileNameSingular)
multiBox.Text = loadFromFile(fileNameMulti)
